name: Build main
on: 
  push:
    branches: 
      - main

jobs:
  build:
    name: Build, test and publish app Docker images
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: janmeckelholt.io
      DOCKER_TARGET_PLATFORM: linux/amd64
      PLATFORM: linux/amd64
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
    steps:
      - uses: actions/checkout@v4


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build the docker-compose stack
        run:  docker compose build
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          RUNNING_APP_PASSWORD: ${{ secrets.RUNNING_APP_PASSWORD }}
          HTTP_GATEWAY_BASE_URL: 'janmeckelholt.de'
          HTTP_GATEWAY_PORT: 443
          USERID: 1001
     
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish image(s)
        run: |
          docker tag running-http_gateway ${{ secrets.DOCKERHUB_USERNAME}}/running-http_gateway:main-${{ github.sha }}  
          docker tag running-runner ${{ secrets.DOCKERHUB_USERNAME}}/running-runner:main-${{ github.sha }} 
          docker tag running-strava-service ${{ secrets.DOCKERHUB_USERNAME}}/running-strava-service:main-${{ github.sha }} 
          docker tag running-database-service ${{ secrets.DOCKERHUB_USERNAME}}/running-database-service:main-${{ github.sha }}
          docker tag running-populate_db ${{ secrets.DOCKERHUB_USERNAME}}/running-populate_db:main-${{ github.sha }} 
          docker tag running-postgres ${{ secrets.DOCKERHUB_USERNAME}}/running-postgres:main-${{ github.sha }} 
          docker push ${{ secrets.DOCKERHUB_USERNAME}}/running-http_gateway:main-${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME}}/running-runner:main-${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME}}/running-strava-service:main-${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME}}/running-database-service:main-${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME}}/running-populate_db:main-${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME}}/running-postgres:main-${{ github.sha }}



#  - name: Prepare      
#       if: success()      
#       id: prepare      
#       run: |        
#         echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
#         echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
#         echo ::set-output name=version::${{ github.sha }}      
# - name: Docker Login      
#       if: success()      
#       run: |        
#         echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login ${DOCKER_REGISTRY} --username "${{ secrets.DOCKERHUB_USERNAME}}" --password-stdin              - name: Run Buildx (push image)      
#       if: success()      
#       run: |        
#         docker buildx build \        
#         --platform ${{ steps.prepare.outputs.docker_platform }} \        
#         --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \        
#         --file ./Dockerfile \        
#         --output type=image,push=true .