version: '2.4'
services:
  running_strava-service:
    platform: ${PLATFORM}
    container_name: running_strava-service
    build:
      context: .
      dockerfile: ./strava-service/Dockerfile
    ports:
      - "669:666"
    networks:
      - running-net
    volumes:
      - ./volumes-data/strava-service:/go/src/running/volumes-data
  running_runner:
    platform: ${PLATFORM}
    container_name: running_runner
    build:
      context: .
      dockerfile: ./runner/Dockerfile
    ports:
      - "666:666"
      - "8001:443"
    depends_on:
      - running_strava-service
      - running_database-service
    networks:
      - running-net
    volumes:
      - ./volumes-data/runner:/go/src/running/volumes-data
  running_populate_db:
    platform: ${PLATFORM}
    container_name: running_populate_db
    build:
      context: .
      dockerfile: ./populate_db/Dockerfile
    ports:
      - "670:666"
    depends_on:
      - running_strava-service
      - running_database-service
    networks:
      - running-net
    volumes:
      - ./volumes-data/populate_db:/go/src/running/volumes-data
  running_http_gateway:
    platform: ${PLATFORM}
    container_name: running_http_gateway
    build:
      context: .
      dockerfile: ./http_gateway/Dockerfile
    ports:
      - "81:80"
      - "444:443"
      - "333:333"
    depends_on:
      - running_runner
    networks:
      - running-net
    volumes:
      - ./volumes-data/common:/go/src/running/common
      - ./volumes-data/http_gateway:/go/src/running/volumes-data
  running_database-service:
    platform: ${PLATFORM}
    container_name: running_database-service
    build:
      context: .
      dockerfile: ./database-service/Dockerfile
    ports:
      - "667:666"
    networks:
      - running-net
      - db-net
    volumes:
      - ./volumes-data/common:/go/src/running/common
      - ./volumes-data/database-service:/go/src/running/volumes-data
  running_postgres:
    platform: ${PLATFORM}
    container_name: running_postgres
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    restart: unless-stopped
    ports:
      - "5432:5432"
    user: "$USERID:$USERID"
    networks:
      - db-net
    volumes:
      - ./volumes-data/postgres/data:/var/lib/postgresql/data
      - ./volumes-data/common:/common
      - ./volumes-data/postgres/certs:/volumes-data/certs
networks:
  running-net:
  db-net:
  proxy-net:
  external:
    name: proxy-net
