version: '2.4'
services:
  strava-service:
    platform: ${PLATFORM}
    container_name: strava-service
    build:
      context: .
      dockerfile: ./strava-service/Dockerfile
    ports:
      - "669:666"
    networks:
      - running-net
    volumes:
      - ./volumes-data/strava-service/certs:/go/src/running/strava-service/certs
      - ./volumes-data/strava-service/env:/go/src/running/strava-service/env
  runner:
    platform: ${PLATFORM}
    container_name: runner
    build:
      context: .
      dockerfile: ./runner/Dockerfile
    ports:
      - "666:666"
    depends_on:
      - strava-service
      - database-service
    networks:
      - running-net
    volumes:
      - ./volumes-data/runner/certs:/go/src/running/runner/certs
      - ./volumes-data/runner/env:/go/src/running/runner/env 
  http_gateway:
    platform: ${PLATFORM}
    container_name: http_gateway
    build:
      context: .
      dockerfile: ./http_gateway/Dockerfile
    ports:
      - "81:80"
      - "444:443"
    depends_on:
      - runner
    networks:
      - running-net
    volumes:
      - ./volumes-data/common:/go/src/running/http_gateway/commonenv
      - ./volumes-data/http_gateway/certs:/go/src/running/http_gateway/certs
      - ./volumes-data/http_gateway/env:/go/src/running/http_gateway/env
  database-service:
    platform: ${PLATFORM}
    container_name: database-service
    build:
      context: .
      dockerfile: ./database-service/Dockerfile
    ports:
      - "667:666"
    networks:
      - running-net
      - db-net
    volumes:
      - ./volumes-data/common:/go/src/running/database-service/commonenv
      - ./volumes-data/database-service/certs:/go/src/running/database-service/certs
  postgres:
    platform: ${PLATFORM}
    container_name: postgres
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    restart: unless-stopped
    ports:
      - "5432:5432"
    user: "$USERID:$USERID"
    networks:
      - db-net
    volumes:
      - ./volumes-data/postgres/data:/var/lib/postgresql/data
      - ./volumes-data/common:/postgres/commonenv
      - ./volumes-data/postgres/certs:/postgres/certs
  running_app:
    platform: ${PLATFORM}
    container_name: running_app
    build:
      args:
        - RUNNING_APP_PASSWORD=${RUNNING_APP_PASSWORD}  
      context: .
      dockerfile: ./running_app/Dockerfile
    user: "$USERID:$USERID"
    ports:
      - "8001:5000"
    restart: unless-stopped
    networks:
      - running-net
      - proxy-net
    volumes:
      - ./volumes-data/running_app/certs:/running_app/certs
      - ./volumes-data/running_app/log:/log
networks:
  running-net:
  db-net:
  proxy-net:
  external:
    name: proxy-net
