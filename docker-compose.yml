services:
  strava-service:
    container_name: strava-service
    build:
      context: .
      dockerfile: ./strava-service/Dockerfile
    ports:
      - "669:666"
    env_file:
      - ./strava-service/.env.docker
  runner:
    container_name: runner
    build:
      context: .
      dockerfile: ./runner/Dockerfile
    ports:
      - "666:666"
    env_file:
      - ./runner/.env.docker
    depends_on:
      - strava-service
      - database-service
  http_gateway:
    container_name: http_gateway
    build:
      context: .
      dockerfile: ./httpGateway/Dockerfile
    ports:
      - "80:80"
    env_file:
      - ./httpGateway/.env.docker
      - ./httpGateway/.env.docker.secret
      - .env
      - ./running_app/.env.docker.running_app.secret
    depends_on:
      - runner
  database-service:
    container_name: database-service
    build:
      context: .
      dockerfile: ./database-service/Dockerfile
    ports:
      - "667:666"
    env_file:
      - .env.docker.postgres
      - .env.docker.postgres.secret
  postgres:
    container_name: postgres
    image: postgres    
    command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/certs/postgres-cert.pem -c ssl_key_file=/var/lib/postgresql/certs/postgres-key.pem
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
     # - ./postgres:/docker-entrypoint-initdb.d/
      - ./postgres/certs/:/var/lib/postgresql/certs/
    user: "1000:1000"
    env_file:
      - .env.docker.postgres
      - .env.docker.postgres.secret
  # populate-db:
  #   container_name: populate-db
  #   build:
  #     context: .
  #     dockerfile: ./populate-db/Dockerfile
  #   ports:
  #     - 678:666
  #   env_file:
  #     - ./populate-db/.env.docker
  # #     - ./populate-db/.env.docker.secret
  running_app:
    container_name: running_app
    build:  
      context: .
      dockerfile: ./running_app/Dockerfile
    ports:
      - "${RUNNING_APP_PORT}:5000"
    restart: unless-stopped
