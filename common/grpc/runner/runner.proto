syntax = "proto3";
package runner;
option go_package = "github.com/JanMeckelholt/running/common/grpc/runner";
import "google/protobuf/empty.proto";
import "database/database.proto";
import "strava/strava.proto";
service Runner {
  rpc GetRunner(RunnerRequest) returns (strava.RunnerResponse) {}
  rpc CreateClient(database.Client) returns (google.protobuf.Empty) {}
  rpc GetActivities(database.ActivitiesRequest) returns (database.ActivitiesResponse) {}
  rpc ActivitiesToDB(ActivitiesRequest) returns (google.protobuf.Empty) {}
  rpc GetWeekSummaries(WeekSummariesRequest) returns (WeekSummariesResponse) {}
  rpc GetWeekSummary(WeekSummaryRequest) returns (WeekSummary) {}
  rpc Health(HealthMessage) returns (HealthMessage) {}
}

message HealthMessage {
  string Health = 1;
}

message RunnerRequest {
  string clientId = 1;
}

message ActivitiesRequest {
    string clientId= 1;
    uint64  since = 2;
  }

  message WeekSummaryRequest {
    string clientId= 1;
    uint64  week = 2;
    uint64  year = 3;
  }

  message WeekSummariesRequest {
    string clientId= 1;
    uint64  weekSince = 2;
    uint64  weekUntil = 3;
    uint64  yearSince = 4;
    uint64  yearUntil = 5;
  }

message WeekSummary {
  uint64 distance = 1;
  uint64 timeUnix = 2;
  string timeStr = 3;
  uint64 climb = 4;
  uint64 numberOfRuns = 5;
  uint64 numberOfOthers = 6;
  uint64 startOfWeekUnix = 7;
  string startOfWeekStr = 8;
}

message WeekSummariesResponse {
  repeated WeekSummary weeksummaries = 1;
}
